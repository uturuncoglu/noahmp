name: test_datm_lnd

on:
  workflow_dispatch:

jobs:
  latest-stable:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-22.04
    
    env:
      # installation location for spack and other components
      INSTALL_DIR: ${{ github.workspace }}/install

    steps:
      # checkout base repository
      - name: Checkout NoahMP Repository
        uses: actions/checkout@v3
        with:
          ref: feature/nuopc_cap_new
          
      # prepare core environment
      - name: Install Core Development Tools
        run: |
          sudo apt-get update
          sudo apt-get install unzip file gringo
          sudo apt-get install build-essential binutils-dev gfortran
          sudo apt-get install python3-dev python3-boto3 python3-yaml
          sudo apt-get install wget awscli ca-certificates

      # checkout spack to create build environment
      - name: Checkout Spack
        uses: actions/checkout@v3
        with:
          repository: NOAA-EMC/spack
          path: spack
          ref: jcsda_emc_spack_stack

      # create build environment
      - name: Concretize Spack Environment Using YAML Specification
        run: |
          . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
          spack --color always -e ${{ github.workspace }}/.spack concretize -f
      
      # restore build environment from cache
      - name: Restore Build Environment From Cache
        id: cache-spack
        uses: actions/cache@v3
        with:
          path: /home/runner/work/noahmp/.spack-ci
          key: ${{ matrix.os }}-spack-${{ hashFiles('**/spack.lock') }}
          restore-keys: |
            ${{ matrix.os }}-spack
          
      # install build environment
      - name: Install Spack Packages
        run: |
          . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
          spack --color always -e ${{ github.workspace }}/.spack install -j3

      # build and install component
      # need to install with openmp support since fms build with it
      # TODO: update fms in spack.yaml as fms~openmp to build it without openmp support 
      - name: Build and Install NoahMP
        run: |       
          export PATH=${{ github.workspace }}/../.spack-ci/view/bin:$PATH
          export ESMFMKFILE=${{ github.workspace }}/../.spack-ci/view/lib/esmf.mk
          export NetCDF_ROOT=`nc-config --prefix`
          export FC=gfortran
          cd ${{ github.workspace }}
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -DOPENMP=ON ../
          make
          make install

      # checkout data models
      - name: Checkout CDEPS
        uses: actions/checkout@v3
        with:
          repository: uturuncoglu/CDEPS
          path: cdeps
          ref: hotfix/std_build
          
      # build and install data models
      - name: Build and Install CDEPS
        run: |
          export PATH=${{ github.workspace }}/../.spack-ci/view/bin:$PATH
          export ESMFMKFILE=${{ github.workspace }}/../.spack-ci/view/lib/esmf.mk
          export FC=gfortran
          cd ${{ github.workspace }}/cdeps
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} \
            -DPIO_C_LIBRARY=${{ github.workspace }}/../.spack-ci/view/lib \
            -DPIO_C_INCLUDE_DIR=${{ github.workspace }}/../.spack-ci/view/include \
            -DPIO_Fortran_LIBRARY=${{ github.workspace }}/../.spack-ci/view/lib \
            -DPIO_Fortran_INCLUDE_DIR=${{ github.workspace }}/../.spack-ci/view/include \
            -DCMAKE_Fortran_FLAGS="-ffree-line-length-none -fallow-argument-mismatch -fallow-invalid-boz" \
            -DDISABLE_FoX=ON ../
          make
          make install
