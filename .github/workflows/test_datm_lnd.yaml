name: test_datm_lnd

on:
  workflow_dispatch:

jobs:
  latest-stable:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
    
    env:
      # installation location for spack and other components
      INSTALL_DIR: $HOME/install

    steps:
      # checkout base repository
      - name: Checkout NoahMP Repository
        uses: actions/checkout@v3
        with:
          ref: feature/nuopc_cap_new
          
      # prepare core environment
      - name: Install Core Development Tools
        run: |
          sudo apt-get update
          sudo apt-get install unzip file gringo
          sudo apt-get install build-essential binutils-dev gfortran
          sudo apt-get install python3-dev python3-boto3 python3-yaml
          sudo apt-get install wget awscli ca-certificates

      # checkout spack to create build environment
      - name: Checkout Spack
        uses: actions/checkout@v3
        with:
          repository: NOAA-EMC/spack
          path: spack
          ref: jcsda_emc_spack_stack

      # create build environment
      - name: Concretize Spack Environment Using YAML Specification
        run: |
          . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
          spack --color always -e ${{ github.workspace }}/.spack concretize -f
      
      # restore build environment from cache
      #- name: Restore Build Environment From Cache
      #  id: cache-spack
      #  uses: actions/cache@v3
      #  with:
      #    path: ~/.spack-ci
      #    key: spack-${{ hashFiles('**/spack.lock') }}
      #    restore-keys: |
      #      spack-
          
      # create build environment
      #- name: Install Spack Packages
      #  if: steps.cache-spack.outputs.cache-hit != 'true'
      #  run: |
      #    . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
      #    spack -e ${{ github.workspace }}/.spack install -j3
